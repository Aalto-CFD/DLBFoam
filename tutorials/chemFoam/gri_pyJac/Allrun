#!/bin/bash

# Ensure the use of OpenFOAM 11, so that gri tutorial is present in $WM_PROJECT_DIR/test
OF_VER="11"

check_openfoam()
{
    if [ -z ${WM_PROJECT} ]; then
        echo "OpenFOAM environment not set."
        exit 1
    fi

    if [[ ! "$WM_PROJECT_VERSION" == "$OF_VER" ]]; then
        echo "Error: OpenFOAM-$WM_PROJECT_VERSION not supported."
        echo "       See other git branches for potential support."
        exit 1
    fi
}
check_openfoam

# Copy tutorial files from OpenFOAM
cp -nr $WM_PROJECT_DIR/test/chemistry/gri/* .

# Compile and copy mechanism
cd pyJac/lib
./runCmake.sh
cd -
cp -r pyJac/foam constant/
cp pyJac/lib/build/libc_pyjac.so constant/foam/

# Set DLB dictionaries
foamDictionary -entry loadbalancing -set {} constant/chemistryProperties
foamDictionary -entry loadbalancing/active -add false constant/chemistryProperties
foamDictionary -entry refmapping -set {} constant/chemistryProperties
foamDictionary -entry refmapping/active -add false constant/chemistryProperties

# Set pyJac and LAPACK
foamDictionary -entry chemistryType/solver -set ode_pyJac constant/chemistryProperties
foamDictionary -entry chemistryType/method -set loadBalanced_pyJac constant/chemistryProperties
foamDictionary -entry odeCoeffs/solver -set seulex_LAPACK constant/chemistryProperties

# Include libraries
foamDictionary -entry libs -set '("libchemistryModel_DLB.so" "libODE_DLB.so" "$FOAM_CASE/constant/foam/libc_pyjac.so")' system/controlDict

# Change links to mechanism files
sed -i 's|#include .*|#include "$FOAM_CASE/constant/foam/reactions.foam"|g' constant/chemistryProperties
sed -i 's|#include .*|#include "$FOAM_CASE/constant/foam/species.foam"\n#include "$FOAM_CASE/constant/foam/thermo.foam"|g' constant/physicalProperties

# Run chemFoam
chemFoam > log.chemFoam

# Run validation
(cd validation && ./Allrun $*)
