#!/bin/bash
cd ${0%/*} || exit 1    # run from this directory

set -e # Any subsequent(*) commands which fail will cause the shell script to exit immediately


if [ -z ${WM_PROJECT_VERSION+x} ]; then 
    echo "OpenFOAM environment is not set."
    exit 1
else
    if [ $WM_PROJECT_VERSION -ne 8 ]; then
        echo "Wrong OpenFOAM version!"
        echo $WM_PROJECT_VERSION
	exit 1
    else
        echo "Correct OpenFOAM installation! (version 8)"
    fi
fi


check_mkl()
{
    if [ -d "$MKLROOT" ]; then
        echo "Utilising Intel MKL version from path: ${MKLROOT}"
    else
        echo "Error: MKL_ROOT=${MKLROOT} not found."
        exit 1
    fi    
}

check_openblas()
{
    if [ -d "$OPENBLAS_INSTALL_ROOT" ]; then
        echo "Utilising OpenBLAS from path: ${OPENBLAS_INSTALL_ROOT}"
    else
        echo "Error: OPENBLAS_INSTALL_ROOT=${OPENBLAS_INSTALL_ROOT} not found."
        exit 1
    fi    
}


check_cmake()
{
  cmake_com="cmake"
  if ! type $cmake_com &> /dev/null ; then
    echo "Error: cmake could not be found. Required for compiling the pyJac C-library."
    exit 1
  fi
}


PLATFORM=NOT_DEFINED
CLEAN_ALL=false
POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        --clean)
        CLEAN_ALL=true
        shift # past argument
        ;;
        --platform)
        PLATFORM="$2"
        shift # past argument
        shift # past value
        ;;
        *) 
        echo "Error: Correct platform syntax ./Allwmake --platform MKL/OPENBLAS/STANDALONE" 
        exit 1 
        ;;    
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters




if [ $PLATFORM == MKL ]; then
    check_mkl
    cp  src/ODE_DLB/Make/options.mkl src/ODE_DLB/Make/options
elif [ $PLATFORM == OPENBLAS ]; then
    check_openblas
    cp  src/ODE_DLB/Make/options.openblas src/ODE_DLB/Make/options
elif [ $PLATFORM == STANDALONE ]; then
    cp  src/ODE_DLB/Make/options.standalone src/ODE_DLB/Make/options
else
    echo "Error: Correct platform syntax ./Allwmake --platform  MKL/OPENBLAS/STANDALONE"
    exit 1
fi


check_cmake


if [ $CLEAN_ALL == true ]; then
    ./Allwclean
fi


wmake libso src/thermophysicalModels/chemistryModel
wmake libso src/ODE_DLB

pushd tests/validation/pyjacTests/pyjacTestMechanism  > /dev/null
    ./runCmake.sh
popd  > /dev/null

wmake tests/unittests

wmake tests/validation/pyjacTests/PSRTest

pushd tests/unittests  > /dev/null
    ./test.sh
popd  > /dev/null

pushd tests/validation/pyjacTests/PSRTest  > /dev/null
    ./runTests.sh
popd  > /dev/null
