#!/bin/bash
cd ${0%/*} || exit 1    # run from this directory

PLATFORM=NOT_DEFINED #PUHTI / DESKTOP / USERDEF
CLEAN_ALL=false

POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        --clean)
        CLEAN_ALL=true
        shift # past argument
        ;;
        --platform)
        PLATFORM="$2"
        shift # past argument
        shift # past value
        ;;
        *)
        echo "Error: Correct platform syntax ./Allwmake --platform PUHTI/MAHTI/DESKTOP/USERDEF"
        exit 1
        ;;
    esac

done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [ $PLATFORM == PUHTI ]; then
    . /appl/soft/eng/OpenFOAM/OpenFOAM-8_intelmpi/etc/bashrc
    module load intel-mkl
    module load cmake
    cp src/ODE_DLB/Make/options.mkl src/ODE_DLB/Make/options
elif [ $PLATFORM == MAHTI ]; then
    . /appl/soft/eng/OpenFOAM/OpenFOAM-8/etc/bashrc
    module load  openblas
    module load cmake
    cp src/ODE_DLB/Make/options.openblas src/ODE_DLB/Make/options
elif [ $PLATFORM == DESKTOP ]; then
    cp  src/ODE_DLB/Make/options.standalone src/ODE_DLB/Make/options
elif [ $PLATFORM == USERDEF ]; then
    cp src/ODE_DLB/Make/options.mkl src/ODE_DLB/Make/options
    module load cmake
else
    echo Error: Correct platform syntax ./Allwmake --platform  DESKTOP/PUHTI/MAHTI/USERDEF
    exit 1
fi

if [ $CLEAN_ALL == true ]; then
    ./Allwclean
fi


wmake libso src/thermophysicalModels/chemistryModel
wmake libso src/ODE_DLB

pushd tests/validation/pyjacTests/pyjacTestMechanism/lib  > /dev/null
    ./runCmake.sh
popd  > /dev/null

wmake tests/unittests

wmake tests/validation/pyjacTests/PSRTest

pushd tests/unittests  > /dev/null
    ./test.sh
popd  > /dev/null

pushd tests/validation/pyjacTests/PSRTest  > /dev/null
    ./runTests.sh
popd  > /dev/null

pushd utilities  > /dev/null
	./Allrun -m yao
	cp mechanisms/yao/lib/build/libc_pyjac.so ../tutorials/reactingFoam/shearlayer_DLB_pyJac/constant/foam
	cp mechanisms/yao/foam/* ../tutorials/reactingFoam/shearlayer_DLB_pyJac/constant/foam
popd  > /dev/null
